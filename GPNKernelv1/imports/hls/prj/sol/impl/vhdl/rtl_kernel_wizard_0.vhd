-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rtl_kernel_wizard_0 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    axisHBMin_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    axisHBMin_TVALID : IN STD_LOGIC;
    axisHBMin_TREADY : OUT STD_LOGIC;
    axisHBMin_TKEEP : IN STD_LOGIC_VECTOR (31 downto 0);
    axisHBMin_TSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
    axisHBMin_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    axisDDRin_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    axisDDRin_TVALID : IN STD_LOGIC;
    axisDDRin_TREADY : OUT STD_LOGIC;
    axisDDRin_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    axisDDRin_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    axisDDRin_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    axisHBMout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    axisHBMout_TVALID : OUT STD_LOGIC;
    axisHBMout_TREADY : IN STD_LOGIC;
    axisHBMout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    axisHBMout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    axisHBMout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    axisDDRout_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    axisDDRout_TVALID : OUT STD_LOGIC;
    axisDDRout_TREADY : IN STD_LOGIC;
    axisDDRout_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    axisDDRout_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    axisDDRout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of rtl_kernel_wizard_0 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rtl_kernel_wizard_0_rtl_kernel_wizard_0,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.880000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=160,HLS_SYN_LUT=1293,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal Message : STD_LOGIC_VECTOR (63 downto 0);
    signal PEControl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_idle : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_ready : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TREADY : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMin_TREADY : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TKEEP : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_idle : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_ready : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TREADY : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRin_TREADY : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID : STD_LOGIC;
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TKEEP : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal regslice_both_axisHBMout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisDDRout_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state7 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal regslice_both_axisHBMin_V_data_V_U_apdone_blk : STD_LOGIC;
    signal axisHBMin_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal axisHBMin_TVALID_int_regslice : STD_LOGIC;
    signal axisHBMin_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_axisHBMin_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisHBMin_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal axisHBMin_TKEEP_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_axisHBMin_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMin_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisHBMin_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal axisHBMin_TSTRB_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_axisHBMin_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMin_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisHBMin_V_last_V_U_apdone_blk : STD_LOGIC;
    signal axisHBMin_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_axisHBMin_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMin_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisDDRin_V_data_V_U_apdone_blk : STD_LOGIC;
    signal axisDDRin_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal axisDDRin_TVALID_int_regslice : STD_LOGIC;
    signal axisDDRin_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_axisDDRin_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisDDRin_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal axisDDRin_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_axisDDRin_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRin_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisDDRin_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal axisDDRin_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_axisDDRin_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRin_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_axisDDRin_V_last_V_U_apdone_blk : STD_LOGIC;
    signal axisDDRin_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_axisDDRin_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRin_V_last_V_U_ack_in : STD_LOGIC;
    signal axisHBMout_TVALID_int_regslice : STD_LOGIC;
    signal axisHBMout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_axisHBMout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisHBMout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisHBMout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisHBMout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisHBMout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisHBMout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisHBMout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisHBMout_V_last_V_U_vld_out : STD_LOGIC;
    signal axisDDRout_TVALID_int_regslice : STD_LOGIC;
    signal axisDDRout_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_axisDDRout_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRout_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisDDRout_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisDDRout_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRout_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisDDRout_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisDDRout_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axisDDRout_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_axisDDRout_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axisDDRout_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component rtl_kernel_wizard_0_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        axisHBMin_TVALID : IN STD_LOGIC;
        axisHBMout_TREADY : IN STD_LOGIC;
        axisHBMin_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        axisHBMin_TREADY : OUT STD_LOGIC;
        axisHBMin_TKEEP : IN STD_LOGIC_VECTOR (31 downto 0);
        axisHBMin_TSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
        axisHBMin_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        axisHBMout_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        axisHBMout_TVALID : OUT STD_LOGIC;
        axisHBMout_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
        axisHBMout_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        axisHBMout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component rtl_kernel_wizard_0_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        axisDDRin_TVALID : IN STD_LOGIC;
        axisDDRout_TREADY : IN STD_LOGIC;
        axisDDRin_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        axisDDRin_TREADY : OUT STD_LOGIC;
        axisDDRin_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
        axisDDRin_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        axisDDRin_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        axisDDRout_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        axisDDRout_TVALID : OUT STD_LOGIC;
        axisDDRout_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
        axisDDRout_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        axisDDRout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component rtl_kernel_wizard_0_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        Message : OUT STD_LOGIC_VECTOR (63 downto 0);
        PEControl : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component rtl_kernel_wizard_0_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74 : component rtl_kernel_wizard_0_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start,
        ap_done => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done,
        ap_idle => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_idle,
        ap_ready => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_ready,
        axisHBMin_TVALID => axisHBMin_TVALID_int_regslice,
        axisHBMout_TREADY => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TREADY,
        axisHBMin_TDATA => axisHBMin_TDATA_int_regslice,
        axisHBMin_TREADY => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMin_TREADY,
        axisHBMin_TKEEP => axisHBMin_TKEEP_int_regslice,
        axisHBMin_TSTRB => axisHBMin_TSTRB_int_regslice,
        axisHBMin_TLAST => axisHBMin_TLAST_int_regslice,
        axisHBMout_TDATA => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TDATA,
        axisHBMout_TVALID => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID,
        axisHBMout_TKEEP => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TKEEP,
        axisHBMout_TSTRB => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TSTRB,
        axisHBMout_TLAST => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TLAST);

    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94 : component rtl_kernel_wizard_0_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start,
        ap_done => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done,
        ap_idle => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_idle,
        ap_ready => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_ready,
        axisDDRin_TVALID => axisDDRin_TVALID_int_regslice,
        axisDDRout_TREADY => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TREADY,
        axisDDRin_TDATA => axisDDRin_TDATA_int_regslice,
        axisDDRin_TREADY => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRin_TREADY,
        axisDDRin_TKEEP => axisDDRin_TKEEP_int_regslice,
        axisDDRin_TSTRB => axisDDRin_TSTRB_int_regslice,
        axisDDRin_TLAST => axisDDRin_TLAST_int_regslice,
        axisDDRout_TDATA => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TDATA,
        axisDDRout_TVALID => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID,
        axisDDRout_TKEEP => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TKEEP,
        axisDDRout_TSTRB => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TSTRB,
        axisDDRout_TLAST => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TLAST);

    control_s_axi_U : component rtl_kernel_wizard_0_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        Message => Message,
        PEControl => PEControl,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_axisHBMin_V_data_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisHBMin_TDATA,
        vld_in => axisHBMin_TVALID,
        ack_in => regslice_both_axisHBMin_V_data_V_U_ack_in,
        data_out => axisHBMin_TDATA_int_regslice,
        vld_out => axisHBMin_TVALID_int_regslice,
        ack_out => axisHBMin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisHBMin_V_data_V_U_apdone_blk);

    regslice_both_axisHBMin_V_keep_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisHBMin_TKEEP,
        vld_in => axisHBMin_TVALID,
        ack_in => regslice_both_axisHBMin_V_keep_V_U_ack_in,
        data_out => axisHBMin_TKEEP_int_regslice,
        vld_out => regslice_both_axisHBMin_V_keep_V_U_vld_out,
        ack_out => axisHBMin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisHBMin_V_keep_V_U_apdone_blk);

    regslice_both_axisHBMin_V_strb_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisHBMin_TSTRB,
        vld_in => axisHBMin_TVALID,
        ack_in => regslice_both_axisHBMin_V_strb_V_U_ack_in,
        data_out => axisHBMin_TSTRB_int_regslice,
        vld_out => regslice_both_axisHBMin_V_strb_V_U_vld_out,
        ack_out => axisHBMin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisHBMin_V_strb_V_U_apdone_blk);

    regslice_both_axisHBMin_V_last_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisHBMin_TLAST,
        vld_in => axisHBMin_TVALID,
        ack_in => regslice_both_axisHBMin_V_last_V_U_ack_in,
        data_out => axisHBMin_TLAST_int_regslice,
        vld_out => regslice_both_axisHBMin_V_last_V_U_vld_out,
        ack_out => axisHBMin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisHBMin_V_last_V_U_apdone_blk);

    regslice_both_axisDDRin_V_data_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisDDRin_TDATA,
        vld_in => axisDDRin_TVALID,
        ack_in => regslice_both_axisDDRin_V_data_V_U_ack_in,
        data_out => axisDDRin_TDATA_int_regslice,
        vld_out => axisDDRin_TVALID_int_regslice,
        ack_out => axisDDRin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisDDRin_V_data_V_U_apdone_blk);

    regslice_both_axisDDRin_V_keep_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisDDRin_TKEEP,
        vld_in => axisDDRin_TVALID,
        ack_in => regslice_both_axisDDRin_V_keep_V_U_ack_in,
        data_out => axisDDRin_TKEEP_int_regslice,
        vld_out => regslice_both_axisDDRin_V_keep_V_U_vld_out,
        ack_out => axisDDRin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisDDRin_V_keep_V_U_apdone_blk);

    regslice_both_axisDDRin_V_strb_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisDDRin_TSTRB,
        vld_in => axisDDRin_TVALID,
        ack_in => regslice_both_axisDDRin_V_strb_V_U_ack_in,
        data_out => axisDDRin_TSTRB_int_regslice,
        vld_out => regslice_both_axisDDRin_V_strb_V_U_vld_out,
        ack_out => axisDDRin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisDDRin_V_strb_V_U_apdone_blk);

    regslice_both_axisDDRin_V_last_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axisDDRin_TLAST,
        vld_in => axisDDRin_TVALID,
        ack_in => regslice_both_axisDDRin_V_last_V_U_ack_in,
        data_out => axisDDRin_TLAST_int_regslice,
        vld_out => regslice_both_axisDDRin_V_last_V_U_vld_out,
        ack_out => axisDDRin_TREADY_int_regslice,
        apdone_blk => regslice_both_axisDDRin_V_last_V_U_apdone_blk);

    regslice_both_axisHBMout_V_data_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TDATA,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID,
        ack_in => axisHBMout_TREADY_int_regslice,
        data_out => axisHBMout_TDATA,
        vld_out => regslice_both_axisHBMout_V_data_V_U_vld_out,
        ack_out => axisHBMout_TREADY,
        apdone_blk => regslice_both_axisHBMout_V_data_V_U_apdone_blk);

    regslice_both_axisHBMout_V_keep_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TKEEP,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID,
        ack_in => regslice_both_axisHBMout_V_keep_V_U_ack_in_dummy,
        data_out => axisHBMout_TKEEP,
        vld_out => regslice_both_axisHBMout_V_keep_V_U_vld_out,
        ack_out => axisHBMout_TREADY,
        apdone_blk => regslice_both_axisHBMout_V_keep_V_U_apdone_blk);

    regslice_both_axisHBMout_V_strb_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TSTRB,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID,
        ack_in => regslice_both_axisHBMout_V_strb_V_U_ack_in_dummy,
        data_out => axisHBMout_TSTRB,
        vld_out => regslice_both_axisHBMout_V_strb_V_U_vld_out,
        ack_out => axisHBMout_TREADY,
        apdone_blk => regslice_both_axisHBMout_V_strb_V_U_apdone_blk);

    regslice_both_axisHBMout_V_last_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TLAST,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID,
        ack_in => regslice_both_axisHBMout_V_last_V_U_ack_in_dummy,
        data_out => axisHBMout_TLAST,
        vld_out => regslice_both_axisHBMout_V_last_V_U_vld_out,
        ack_out => axisHBMout_TREADY,
        apdone_blk => regslice_both_axisHBMout_V_last_V_U_apdone_blk);

    regslice_both_axisDDRout_V_data_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TDATA,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID,
        ack_in => axisDDRout_TREADY_int_regslice,
        data_out => axisDDRout_TDATA,
        vld_out => regslice_both_axisDDRout_V_data_V_U_vld_out,
        ack_out => axisDDRout_TREADY,
        apdone_blk => regslice_both_axisDDRout_V_data_V_U_apdone_blk);

    regslice_both_axisDDRout_V_keep_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TKEEP,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID,
        ack_in => regslice_both_axisDDRout_V_keep_V_U_ack_in_dummy,
        data_out => axisDDRout_TKEEP,
        vld_out => regslice_both_axisDDRout_V_keep_V_U_vld_out,
        ack_out => axisDDRout_TREADY,
        apdone_blk => regslice_both_axisDDRout_V_keep_V_U_apdone_blk);

    regslice_both_axisDDRout_V_strb_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TSTRB,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID,
        ack_in => regslice_both_axisDDRout_V_strb_V_U_ack_in_dummy,
        data_out => axisDDRout_TSTRB,
        vld_out => regslice_both_axisDDRout_V_strb_V_U_vld_out,
        ack_out => axisDDRout_TREADY,
        apdone_blk => regslice_both_axisDDRout_V_strb_V_U_apdone_blk);

    regslice_both_axisDDRout_V_last_V_U : component rtl_kernel_wizard_0_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TLAST,
        vld_in => grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID,
        ack_in => regslice_both_axisDDRout_V_last_V_U_ack_in_dummy,
        data_out => axisDDRout_TLAST,
        vld_out => regslice_both_axisDDRout_V_last_V_U_vld_out,
        ack_out => axisDDRout_TREADY,
        apdone_blk => regslice_both_axisDDRout_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_ready = ap_const_logic_1)) then 
                    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_ready = ap_const_logic_1)) then 
                    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done, grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, regslice_both_axisHBMout_V_data_V_U_apdone_blk, regslice_both_axisDDRout_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((regslice_both_axisDDRout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_axisHBMout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done)
    begin
        if ((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done)
    begin
        if ((grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(regslice_both_axisHBMout_V_data_V_U_apdone_blk, regslice_both_axisDDRout_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_axisDDRout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_axisHBMout_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state7_assign_proc : process(regslice_both_axisHBMout_V_data_V_U_apdone_blk, regslice_both_axisDDRout_V_data_V_U_apdone_blk)
    begin
                ap_block_state7 <= ((regslice_both_axisDDRout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_axisHBMout_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7, regslice_both_axisHBMout_V_data_V_U_apdone_blk, regslice_both_axisDDRout_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_axisDDRout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_axisHBMout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, regslice_both_axisHBMout_V_data_V_U_apdone_blk, regslice_both_axisDDRout_V_data_V_U_apdone_blk)
    begin
        if ((not(((regslice_both_axisDDRout_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_axisHBMout_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    axisDDRin_TREADY <= regslice_both_axisDDRin_V_data_V_U_ack_in;

    axisDDRin_TREADY_int_regslice_assign_proc : process(grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRin_TREADY, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            axisDDRin_TREADY_int_regslice <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRin_TREADY;
        else 
            axisDDRin_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    axisDDRout_TVALID <= regslice_both_axisDDRout_V_data_V_U_vld_out;
    axisDDRout_TVALID_int_regslice <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TVALID;
    axisHBMin_TREADY <= regslice_both_axisHBMin_V_data_V_U_ack_in;

    axisHBMin_TREADY_int_regslice_assign_proc : process(grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMin_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            axisHBMin_TREADY_int_regslice <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMin_TREADY;
        else 
            axisHBMin_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    axisHBMout_TVALID <= regslice_both_axisHBMout_V_data_V_U_vld_out;
    axisHBMout_TVALID_int_regslice <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TVALID;
    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_ap_start_reg;
    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_11_fu_94_axisDDRout_TREADY <= (axisDDRout_TREADY_int_regslice and ap_CS_fsm_state6);
    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start <= grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_ap_start_reg;
    grp_rtl_kernel_wizard_0_Pipeline_VITIS_LOOP_96_1_fu_74_axisHBMout_TREADY <= (axisHBMout_TREADY_int_regslice and ap_CS_fsm_state3);
end behav;
